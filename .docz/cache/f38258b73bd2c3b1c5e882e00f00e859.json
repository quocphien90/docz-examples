{"remainingRequest":"/Users/p000796/Documents/Research/docz-examples/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/p000796/Documents/Research/docz-examples/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/p000796/Documents/Research/docz-examples/node_modules/source-map-loader/index.js!/Users/p000796/Documents/Research/docz-examples/src/utils.js","dependencies":[{"path":"/Users/p000796/Documents/Research/docz-examples/src/utils.js","mtime":1559118568415},{"path":"/Users/p000796/Documents/Research/docz-examples/node_modules/cache-loader/dist/cjs.js","mtime":1559034381405},{"path":"/Users/p000796/Documents/Research/docz-examples/node_modules/thread-loader/dist/cjs.js","mtime":1559034383944},{"path":"/Users/p000796/Documents/Research/docz-examples/node_modules/babel-loader/lib/index.js","mtime":1559034380872},{"path":"/Users/p000796/Documents/Research/docz-examples/node_modules/source-map-loader/index.js","mtime":1559034383808}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIi9Vc2Vycy9wMDAwNzk2L0RvY3VtZW50cy9SZXNlYXJjaC9kb2N6LWV4YW1wbGVzL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7ZXhwb3J0IHZhciB0aGVtZWQ9ZnVuY3Rpb24gdGhlbWVkKGtleSl7cmV0dXJuIGZ1bmN0aW9uKHByb3BzKXtyZXR1cm4gcHJvcHMudGhlbWVba2V5XTt9O307aWYodHlwZW9mIHRoZW1lZCE9PSd1bmRlZmluZWQnJiZ0aGVtZWQmJnRoZW1lZD09PU9iamVjdCh0aGVtZWQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKHRoZW1lZCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGVtZWQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6InRoZW1lZCIsZmlsZW5hbWU6InNyYy91dGlscy5qcyJ9fSk7fWV4cG9ydCB2YXIgaXNPYmplY3Q9ZnVuY3Rpb24gaXNPYmplY3QoaXRlbSl7cmV0dXJuIGl0ZW0mJnR5cGVvZiBpdGVtPT09J29iamVjdCcmJiFBcnJheS5pc0FycmF5KGl0ZW0pO307aWYodHlwZW9mIGlzT2JqZWN0IT09J3VuZGVmaW5lZCcmJmlzT2JqZWN0JiZpc09iamVjdD09PU9iamVjdChpc09iamVjdCkmJk9iamVjdC5pc0V4dGVuc2libGUoaXNPYmplY3QpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoaXNPYmplY3QsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6ImlzT2JqZWN0IixmaWxlbmFtZToic3JjL3V0aWxzLmpzIn19KTt9ZXhwb3J0IHZhciBtZXJnZURlZXA9ZnVuY3Rpb24gbWVyZ2VEZWVwKHRhcmdldCl7Zm9yKHZhciBfbGVuPWFyZ3VtZW50cy5sZW5ndGgsc291cmNlcz1uZXcgQXJyYXkoX2xlbj4xP19sZW4tMTowKSxfa2V5PTE7X2tleTxfbGVuO19rZXkrKyl7c291cmNlc1tfa2V5LTFdPWFyZ3VtZW50c1tfa2V5XTt9aWYoIXNvdXJjZXMubGVuZ3RoKXJldHVybiB0YXJnZXQ7dmFyIHNvdXJjZT1zb3VyY2VzLnNoaWZ0KCk7aWYoaXNPYmplY3QodGFyZ2V0KSYmaXNPYmplY3Qoc291cmNlKSl7LyogZXNsaW50LWRpc2FibGUgKi9mb3IodmFyIGtleSBpbiBzb3VyY2Upe2lmKGlzT2JqZWN0KHNvdXJjZVtrZXldKSl7aWYoIXRhcmdldFtrZXldKU9iamVjdC5hc3NpZ24odGFyZ2V0LF9kZWZpbmVQcm9wZXJ0eSh7fSxrZXkse30pKTttZXJnZURlZXAodGFyZ2V0W2tleV0sc291cmNlW2tleV0pO31lbHNle09iamVjdC5hc3NpZ24odGFyZ2V0LF9kZWZpbmVQcm9wZXJ0eSh7fSxrZXksc291cmNlW2tleV0pKTt9fS8qIGVzbGludC1lbmFibGUgKi99cmV0dXJuIG1lcmdlRGVlcC5hcHBseSh2b2lkIDAsW3RhcmdldF0uY29uY2F0KHNvdXJjZXMpKTt9O2lmKHR5cGVvZiBtZXJnZURlZXAhPT0ndW5kZWZpbmVkJyYmbWVyZ2VEZWVwJiZtZXJnZURlZXA9PT1PYmplY3QobWVyZ2VEZWVwKSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShtZXJnZURlZXApKXtPYmplY3QuZGVmaW5lUHJvcGVydHkobWVyZ2VEZWVwLCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJtZXJnZURlZXAiLGZpbGVuYW1lOiJzcmMvdXRpbHMuanMifX0pO31leHBvcnQgdmFyIGhleFRvUmdiQT1mdW5jdGlvbiBoZXhUb1JnYkEoaGV4LGFwaGEpe3ZhciBjO2lmKC9eIyhbQS1GYS1mMC05XXszfSl7MSwyfSQvLnRlc3QoaGV4KSl7Yz1oZXguc3Vic3RyaW5nKDEpLnNwbGl0KCcnKTtpZihjLmxlbmd0aD09PTMpe2M9W2NbMF0sY1swXSxjWzFdLGNbMV0sY1syXSxjWzJdXTt9Yz0iMHgiLmNvbmNhdChjLmpvaW4oJycpKTsvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKcmV0dXJuInJnYmEoIi5jb25jYXQoW2M+PjE2JjI1NSxjPj44JjI1NSxjJjI1NV0uam9pbignLCcpLCIsICIpLmNvbmNhdChhcGhhLCIpIik7fXRocm93IG5ldyBFcnJvcignQmFkIEhleCcpO307aWYodHlwZW9mIGhleFRvUmdiQSE9PSd1bmRlZmluZWQnJiZoZXhUb1JnYkEmJmhleFRvUmdiQT09PU9iamVjdChoZXhUb1JnYkEpJiZPYmplY3QuaXNFeHRlbnNpYmxlKGhleFRvUmdiQSkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShoZXhUb1JnYkEsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6ImhleFRvUmdiQSIsZmlsZW5hbWU6InNyYy91dGlscy5qcyJ9fSk7fQ=="},{"version":3,"sources":["/Users/p000796/Documents/Research/docz-examples/src/utils.js"],"names":["themed","key","props","theme","isObject","item","Array","isArray","mergeDeep","target","sources","length","source","shift","Object","assign","hexToRgbA","hex","apha","c","test","substring","split","join","Error"],"mappings":"wKAAA,MAAO,IAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,GAAG,QAAI,UAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYF,GAAZ,CAAJ,EAAT,EAAlB,C,4NACP,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,IAAI,QAC1BA,CAAAA,IAAI,EAAI,MAAOA,CAAAA,IAAP,GAAgB,QAAxB,EAAoC,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CADX,EAArB,C,0OAEP,MAAO,IAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAwB,+BAAZC,OAAY,qDAAZA,OAAY,0BAC/C,GAAI,CAACA,OAAO,CAACC,MAAb,CAAqB,MAAOF,CAAAA,MAAP,CACrB,GAAMG,CAAAA,MAAM,CAAGF,OAAO,CAACG,KAAR,EAAf,CAEA,GAAIT,QAAQ,CAACK,MAAD,CAAR,EAAoBL,QAAQ,CAACQ,MAAD,CAAhC,CAA0C,CACxC,oBACA,IAAK,GAAMX,CAAAA,GAAX,GAAkBW,CAAAA,MAAlB,CAA0B,CACxB,GAAIR,QAAQ,CAACQ,MAAM,CAACX,GAAD,CAAP,CAAZ,CAA2B,CACzB,GAAI,CAACQ,MAAM,CAACR,GAAD,CAAX,CAAkBa,MAAM,CAACC,MAAP,CAAcN,MAAd,oBAAyBR,GAAzB,CAA+B,EAA/B,GAClBO,SAAS,CAACC,MAAM,CAACR,GAAD,CAAP,CAAcW,MAAM,CAACX,GAAD,CAApB,CAAT,CACD,CAHD,IAGO,CACLa,MAAM,CAACC,MAAP,CAAcN,MAAd,oBAAyBR,GAAzB,CAA+BW,MAAM,CAACX,GAAD,CAArC,GACD,CACF,CACD,mBACD,CAED,MAAOO,CAAAA,SAAS,MAAT,SAAUC,MAAV,SAAqBC,OAArB,EAAP,CACD,CAlBM,C,iPAmBP,MAAO,IAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,CAAMC,IAAN,CAAe,CACtC,GAAIC,CAAAA,CAAJ,CAEA,GAAI,2BAA2BC,IAA3B,CAAgCH,GAAhC,CAAJ,CAA0C,CACxCE,CAAC,CAAGF,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiBC,KAAjB,CAAuB,EAAvB,CAAJ,CACA,GAAIH,CAAC,CAACR,MAAF,GAAa,CAAjB,CAAoB,CAClBQ,CAAC,CAAG,CAACA,CAAC,CAAC,CAAD,CAAF,CAAOA,CAAC,CAAC,CAAD,CAAR,CAAaA,CAAC,CAAC,CAAD,CAAd,CAAmBA,CAAC,CAAC,CAAD,CAApB,CAAyBA,CAAC,CAAC,CAAD,CAA1B,CAA+BA,CAAC,CAAC,CAAD,CAAhC,CAAJ,CACD,CACDA,CAAC,aAAQA,CAAC,CAACI,IAAF,CAAO,EAAP,CAAR,CAAD,CACA;AACA,qBAAe,CAAEJ,CAAC,EAAI,EAAN,CAAY,GAAb,CAAmBA,CAAC,EAAI,CAAN,CAAW,GAA7B,CAAkCA,CAAC,CAAG,GAAtC,EAA2CI,IAA3C,CACb,GADa,CAAf,cAEML,IAFN,MAGD,CACD,KAAM,IAAIM,CAAAA,KAAJ,CAAU,SAAV,CAAN,CACD,CAfM,C","sourcesContent":["export const themed = key => props => props.theme[key]\nexport const isObject = item =>\n  item && typeof item === 'object' && !Array.isArray(item)\nexport const mergeDeep = (target, ...sources) => {\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    /* eslint-disable */\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} })\n        mergeDeep(target[key], source[key])\n      } else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n    /* eslint-enable */\n  }\n\n  return mergeDeep(target, ...sources)\n}\nexport const hexToRgbA = (hex, apha) => {\n  let c\n\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split('')\n    if (c.length === 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]]\n    }\n    c = `0x${c.join('')}`\n    // eslint-disable-next-line\n    return `rgba(${[(c >> 16) & 255, (c >> 8) & 255, c & 255].join(\n      ','\n    )}, ${apha})`\n  }\n  throw new Error('Bad Hex')\n}\n"]}]}